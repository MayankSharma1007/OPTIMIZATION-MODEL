# -*- coding: utf-8 -*-
"""OptimizationModel.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BD9S4pK-XWyipmEZv9DDHhhwIqPxEMZ4
"""

pip install pulp

# Import PuLP
from pulp import LpMaximize, LpProblem, LpVariable, lpSum, value

# Step 1: Define the problem
model = LpProblem(name="product-mix-optimization", sense=LpMaximize)

# Step 2: Define decision variables
# x = units of Product A, y = units of Product B
x = LpVariable(name="Product_A", lowBound=0, cat='Continuous')
y = LpVariable(name="Product_B", lowBound=0, cat='Continuous')

# Step 3: Define the objective function
# Profit: $20 per unit of A, $30 per unit of B
model += 20 * x + 30 * y, "Total_Profit"

# Step 4: Add constraints
# Constraint 1: Labor hours (max 100 hours)
# Product A requires 2 hours, Product B requires 3 hours
model += 2 * x + 3 * y <= 100, "Labor_Constraint"

# Constraint 2: Material units (max 80 units)
# Product A uses 4 units, Product B uses 2 units
model += 4 * x + 2 * y <= 80, "Material_Constraint"

# Step 5: Solve the problem
model.solve()

# Step 6: Display results
print("Optimal Production Plan:")
print(f"Produce {x.varValue:.2f} units of Product A")
print(f"Produce {y.varValue:.2f} units of Product B")
print(f"Maximum Profit: ${value(model.objective):.2f}")